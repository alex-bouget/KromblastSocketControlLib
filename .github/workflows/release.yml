name: Release Kromblast

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - run: pip install meson ninja

      - name: install git submodules
        run: git submodule update --init --recursive

      - name: install dependency
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - run: meson setup builddir/
        env:
          CC: gcc

      - run: meson test -C builddir/ -v

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Linux_Meson_Testlog
          path: builddir/meson-logs/testlog.txt

      - run: DESTDIR=./dist meson install -C builddir/

      - uses: actions/upload-artifact@v4
        with:
          name: Linux_signalLib
          path: builddir/dist/

  build-linux-20:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - run: pip install meson ninja

      - name: install git submodules
        run: git submodule update --init --recursive

      - name: install dependency
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - run: meson setup builddir/
        env:
          CC: gcc

      - run: meson test -C builddir/ -v

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Linux_Meson_Testlog
          path: builddir/meson-logs/testlog.txt

      - run: DESTDIR=./dist meson install -C builddir/

      - uses: actions/upload-artifact@v4
        with:
          name: Linux_signalLib_20
          path: builddir/dist/


  make-releases:
    runs-on: ubuntu-latest
    needs: [build-linux, build-linux-20] #, macos, windows]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: cd dist
        run: cd dist

      - name: Overview tree
        run: tree

      - name: compress artifact
        run: cd dist && for i in *; do [ -d "${i}" ] && cd "${i}" && zip -r "./../${i}.zip" "." && cd ..; done

      - name: Overview tree
        run: tree

      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            dist/Linux_signalLib.zip
            dist/Linux_signalLib_20.zip
          # dist/macos/MacOs_Kromblast.zip
          # dist/windows/Windows_Kromblast.zip
